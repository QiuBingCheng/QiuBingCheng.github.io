<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>資料分析 on 邱秉誠 (BingCheng)</title>
    <link>http://localhost:1313/categories/%E8%B3%87%E6%96%99%E5%88%86%E6%9E%90/</link>
    <description>Recent content in 資料分析 on 邱秉誠 (BingCheng)</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Sep 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E8%B3%87%E6%96%99%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>社會網路分析 (Social Network Analysis)的度中心性(degree centrality)、介數中心性 (betweenness centrality) 及接近中心性 (closeness centrality)</title>
      <link>http://localhost:1313/post/social-network-analysis/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/social-network-analysis/</guid>
      <description>&lt;p&gt;社會網路分析（Social Network Analysis, SNA）是根據網路(Network theory)及圖論 (Graph theory) 對社會結構進行探索的分析方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>實作單純貝氏分類器 (Naive Bayes Classifier)，並應用於垃圾訊息分類</title>
      <link>http://localhost:1313/post/naive-bayes-classifier/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/naive-bayes-classifier/</guid>
      <description>&lt;p&gt;貝氏定理是機率論的一種定理，描述在已知某些條件下，計算某個特定事件發生的機率為何。例如已知某條訊息包含「優惠」這個單詞，使用貝氏定理可以計算出為廣告訊息的機率，進而大幅提高過濾垃圾訊息的精準度，因此時常作為攔截垃圾信件的用途。&lt;/p&gt;</description>
    </item>
    <item>
      <title>假設檢定基礎觀念</title>
      <link>http://localhost:1313/post/hypothesis-test/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/hypothesis-test/</guid>
      <description>&lt;p&gt;假設檢定就是經由觀察一組數據，推論一個對母數的估計是否正確。我們通常會選擇一個合適的檢定統計量，如果檢定統計量在基於特定分配底下出現的機率很低，我們就會推翻虛無假設，認為對母數的估計是錯誤的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>圖像文字辨識：Google Cloud Vision API vs pytesseract</title>
      <link>http://localhost:1313/post/image-text-recognition/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/image-text-recognition/</guid>
      <description>&lt;p&gt;這篇會介紹 Google Cloud Vision API 和 pytesseract 套件的環境安裝及使用教學，最後會進行兩者文字辨識效果的比較。辨識效果先講結論，Google Cloud Vision API 屌打 pytesseract 套件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>以 Python 實作 tf-idf 算法，並以文字雲視覺化呈現</title>
      <link>http://localhost:1313/post/tf-idf-lyrics/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/tf-idf-lyrics/</guid>
      <description>&lt;p&gt;這篇文章會用周杰倫、五月天、林俊傑三者的歌詞文本作為資料集，以 tf-idf 加權技術萃取三者歌詞文本的關鍵字，並且以文字雲的方式呈現。&lt;/p&gt;</description>
    </item>
    <item>
      <title>實現推薦系統的協同過濾算法 (User-based Collaborative Filtering)</title>
      <link>http://localhost:1313/post/user-based-recommendation/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/user-based-recommendation/</guid>
      <description>&lt;p&gt;今天我要為各位介紹的是協同過濾的其中一種算法，基於使用者的協同過濾推薦 (User-based Collaborative Filtering)，通過不同用戶對 item 的評分來評測用戶之間的相似性，並基於此相似性做出推薦。&lt;/p&gt;</description>
    </item>
    <item>
      <title>歐氏距離與餘弦相似度的比較</title>
      <link>http://localhost:1313/post/euclidean-vs-cosine/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/euclidean-vs-cosine/</guid>
      <description>&lt;p&gt;在數據挖掘中，相似性度量是個基礎且重要的問題，我們經常想得知兩個個體之間存在的差異大小，藉由一個合適的度量方式，幫助我們執行分群、分類等任務。在眾多度量方式，最耳熟能詳的莫過於&lt;strong&gt;歐式距離&lt;/strong&gt;、&lt;strong&gt;餘弦相似度&lt;/strong&gt;，這篇文章將帶領讀者初探兩者的原理及應用場景。&lt;/p&gt;</description>
    </item>
    <item>
      <title>簡單實用的電影推薦系統 (Content-based Recommendation)</title>
      <link>http://localhost:1313/post/content-based-recommendation/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/content-based-recommendation/</guid>
      <description>&lt;p&gt;筆者在大四時擔任資策會數創所工讀生，其中一項任務是負責實作影音平台的推薦系統，概念通俗易懂，沒有使用複雜的演算法或是高深的數學原理，只要有一點距離度量的概念即可(可以參考筆者撰寫的&lt;a href=&#34;http://localhost:1313/post/euclidean-vs-cosine/&#34;&gt;歐氏距離與餘弦相似度的比較&lt;/a&gt;)，因此本篇分享對象適合對於推薦系統剛入門的朋友&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
